name: Build Emailer

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
        runtime: [win-x64, linux-x64, osx-x64]

    runs-on: ${{ matrix.runtime == 'win-x64' && 'windows-latest' || matrix.runtime == 'linux-x64' && 'ubuntu-latest' || 'macos-latest' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # ----------  .NET  ----------
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Cache NuGet
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.vbproj') }}
        restore-keys: ${{ runner.os }}-nuget-

    - name: Restore
      run: dotnet restore emailer.vbproj

    - name: Build
      run: dotnet build emailer.vbproj --configuration ${{ matrix.configuration }} --no-restore

    # ----------  ПУБЛИКАЦИЯ  ----------
    - name: Publish (self-contained)
      run: >
        dotnet publish emailer.vbproj
        --configuration ${{ matrix.configuration }}
        --runtime ${{ matrix.runtime }}
        --output publish/${{ matrix.runtime }}
        --self-contained true

    # ----------  КОНФИГИ  ----------
    - name: Create default config & ini if missing
      run: |
        [ ! -f emailer.config ] && echo "Secret=yoursecret" > emailer.config
        [ ! -f emailer.ini ] && echo "Subject_demo" > emailer.ini
      shell: bash

    - name: Copy config to artifact
      run: |
        cp emailer.config publish/${{ matrix.runtime }}/ 2>/dev/null || true
        cp emailer.ini   publish/${{ matrix.runtime }}/ 2>/dev/null || true
      shell: bash

    # ----------  ЛИСТИНГ  ----------
    - name: List published files  (Windows)
      if: matrix.runtime == 'win-x64'
      shell: pwsh
      run: Get-ChildItem publish/${{ matrix.runtime }}

    - name: List published files  (Unix)
      if: matrix.runtime != 'win-x64'
      shell: bash
      run: ls -la publish/${{ matrix.runtime }}/

    # ----------  АРТЕФАКТ  ----------
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: emailer-${{ matrix.runtime }}
        path: publish/${{ matrix.runtime }}
        retention-days: 7

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Display structure
      run: ls -R artifacts

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/emailer-win-x64/**
          artifacts/emailer-linux-x64/**
          artifacts/emailer-osx-x64/**
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}