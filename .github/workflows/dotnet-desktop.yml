name: .NET Desktop Build and Test

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  DOTNET_VERSION: '8.0.x'
  CONFIGURATION: 'Release'

permissions:
  contents: write

jobs:
  build:
    name: Build and Test
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore
      
    - name: Test
      run: dotnet test --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal
      
    - name: Publish Windows app
      run: dotnet publish --configuration ${{ env.CONFIGURATION }} --no-build --output ./publish
      
    - name: Verify INI file included
      run: |
        echo "Checking if INI file is in publish directory:"
        Get-ChildItem ./publish -Recurse -Filter *.ini
        if (-not (Test-Path "./publish/config.ini")) {
          echo "WARNING: config.ini not found in publish directory"
        }
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: emailer-app
        path: ./publish/
        
    - name: Create ZIP archive
      run: |
        $publishDir = "./publish"
        if (Test-Path $publishDir) {
          # Создаем ZIP напрямую из папки publish - файлы будут в корне архива
          Compress-Archive -Path "$publishDir/*" -DestinationPath "Emailer-${{ github.sha }}.zip" -Force
          echo "ZIP archive created successfully"
        } else {
          echo "Publish directory not found"
          exit 1
        }
        
    - name: Upload ZIP artifact
      uses: actions/upload-artifact@v4
      with:
        name: emailer-zip
        path: Emailer-${{ github.sha }}.zip
        retention-days: 30
        
  cross-platform-build:
    name: Cross-Platform Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }}
      
    - name: Basic Functionality Test
      shell: bash
      run: |
        echo "Running basic functionality tests on $RUNNER_OS"
        dotnet test --verbosity normal
        
  linux-deb-package:
    name: Create DEB Package
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }}
        
    - name: Publish for Linux
      run: dotnet publish --configuration ${{ env.CONFIGURATION }} --runtime linux-x64 --self-contained true --output ./publish-linux
        
    - name: Verify INI file for Linux
      run: |
        echo "Checking INI file for Linux build:"
        find ./publish-linux -name "*.ini"
        
    - name: Install dpkg tools
      run: |
        sudo apt-get update
        sudo apt-get install -y dpkg-dev debhelper
        
    - name: Create DEB package structure
      run: |
        mkdir -p deb-package/usr/local/bin/emailer
        mkdir -p deb-package/DEBIAN
        
        # Копируем опубликованные файлы (включая INI)
        cp -r publish-linux/* deb-package/usr/local/bin/emailer/
        
        # Создаем control файл для DEB пакета
        cat > deb-package/DEBIAN/control << EOF
        Package: emailer
        Version: 1.0.0-${{ github.run_number }}
        Section: utils
        Priority: optional
        Architecture: amd64
        Maintainer: Your Name <your-email@example.com>
        Description: SMTP Email Sending Utility
         Emailer is a cross-platform application for sending emails via SMTP.
         Features include SSL/TLS support, file attachments, and comprehensive logging.
        EOF
        
        # Создаем скрипт для запуска
        mkdir -p deb-package/usr/bin
        cat > deb-package/usr/bin/emailer << EOF
        #!/bin/bash
        exec /usr/local/bin/emailer/Emailer "\$@"
        EOF
        chmod +x deb-package/usr/bin/emailer
        
        echo "DEB package structure created"
        
    - name: Build DEB package
      run: |
        dpkg-deb --build deb-package emailer_1.0.0-${{ github.run_number }}_amd64.deb
        echo "DEB package built successfully"
        
    - name: Upload DEB artifact
      uses: actions/upload-artifact@v4
      with:
        name: emailer-deb-package
        path: emailer_*.deb
        retention-days: 30
        
  macos-packages:
    name: Create macOS Packages
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }}
        
    - name: Publish for macOS
      run: dotnet publish --configuration ${{ env.CONFIGURATION }} --runtime osx-x64 --self-contained true --output ./publish-macos
        
    - name: Verify INI file for macOS
      run: |
        echo "Checking INI file for macOS build:"
        find ./publish-macos -name "*.ini"
        
    - name: Create macOS ZIP package
      run: |
        # Создаем ZIP напрямую из папки publish-macos - файлы будут в корне архива
        cd publish-macos
        zip -r ../Emailer-macOS-${{ github.ref_name || github.sha }}.zip .
        echo "macOS ZIP package created"
        
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: emailer-macos-packages
        path: Emailer-macOS-*.zip
        retention-days: 30
        
  release:
    name: Create Release
    runs-on: windows-latest
    needs: [build, cross-platform-build, linux-deb-package, macos-packages]
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download DEB package
      uses: actions/download-artifact@v4
      with:
        name: emailer-deb-package
        path: ./
        
    - name: Download macOS packages
      uses: actions/download-artifact@v4
      with:
        name: emailer-macos-packages
        path: ./
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Build Release version
      run: dotnet build --configuration ${{ env.CONFIGURATION }}
        
    - name: Publish Release
      run: dotnet publish --configuration ${{ env.CONFIGURATION }} --output ./publish
      
    - name: Create Release ZIP
      run: |
        $publishDir = "./publish"
        if (Test-Path $publishDir) {
          # Создаем ZIP напрямую из папки publish - файлы будут в корне архива
          Compress-Archive -Path "$publishDir/*" -DestinationPath "Emailer-Windows-${{ github.ref_name }}.zip" -Force
          echo "Release ZIP archive created successfully"
        } else {
          echo "Publish directory not found"
          exit 1
        }
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Emailer ${{ github.ref_name }}
        body: |
          Emailer - SMTP Email Sending Utility
          
          Features:
          - SMTP email sending with SSL/TLS
          - Cross-platform support (Windows/Linux/macOS)
          - File attachment support
          - Password encryption
          - Comprehensive logging
          - Configuration via config.ini file
          
          **Downloads:**
          - `Emailer-Windows-*.zip` - Portable Windows version
          - `emailer_*.deb` - DEB package for Linux (Ubuntu/Debian)
          - `Emailer-macOS-*.zip` - Portable macOS version
          
          **Configuration:**
          Edit `config.ini` file to configure SMTP settings and defaults.
          
          See README.md for full documentation.
        files: |
          ./Emailer-Windows-${{ github.ref_name }}.zip
          ./emailer_*.deb
          ./Emailer-macOS-*.zip
        draft: false
        prerelease: false
