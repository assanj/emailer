name: Build & Release Emailer

on:
  push:
    tags: [ "v*" ]            # запускаем только на тегах v1.2.3 etc
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        runtime: [win-x64, linux-x64, osx-x64]

    runs-on: ${{ matrix.runtime == 'win-x64' && 'windows-latest' || matrix.runtime == 'linux-x64' && 'ubuntu-latest' || 'macos-latest' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Cache NuGet
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.vbproj') }}

    - name: Restore
      run: dotnet restore emailer.vbproj

    - name: Build
      run: dotnet build emailer.vbproj -c Release --no-restore

    - name: Publish (self-contained, single-file)
      run: >
        dotnet publish emailer.vbproj
        -c Release
        -r ${{ matrix.runtime }}
        -p:PublishSingleFile=true
        -p:SelfContained=true
        -p:IncludeNativeLibrariesForSelfExtract=true
        -o publish/${{ matrix.runtime }}

    - name: Create default config & ini if missing
      run: |
        [ ! -f emailer.config ] && echo "Secret=yoursecret" > emailer.config
        [ ! -f emailer.ini ]   && echo "Subject_demo"    > emailer.ini
      shell: bash

    - name: Copy configs into publish folder
      run: |
        cp emailer.config publish/${{ matrix.runtime }}/
        cp emailer.ini   publish/${{ matrix.runtime }}/
      shell: bash

    - name: Zip artifact (runtime-specific)
      shell: bash
      run: |
        cd publish/${{ matrix.runtime }}
        zip -r ../../../emailer-${{ matrix.runtime }}.zip .

    - name: Upload zip for release
      uses: actions/upload-artifact@v4
      with:
        name: emailer-${{ matrix.runtime }}
        path: emailer-${{ matrix.runtime }}.zip
        retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Display files
      run: ls -R

    - name: Create / update GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          emailer-win-x64/emailer-win-x64.zip
          emailer-linux-x64/emailer-linux-x64.zip
          emailer-osx-x64/emailer-osx-x64.zip
        draft: false
        prerelease: false
        tag_name: ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}