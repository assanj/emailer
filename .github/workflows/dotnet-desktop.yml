name: Build Emailer

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
        runtime: [win-x64, linux-x64, osx-x64]
    
    runs-on: ${{ matrix.runtime == 'win-x64' && 'windows-latest' || matrix.runtime == 'linux-x64' && 'ubuntu-latest' || 'macos-latest' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x  # Явно указываем .NET 8 вместо 9

    - name: List project files
      run: |
        if [ "${{ matrix.runtime }}" = "win-x64" ]; then
          dir *.vbproj /s
          dir *.csproj /s
          dir *.sln /s
        else
          find . -name "*.vbproj" -o -name "*.csproj" -o -name "*.sln"
        fi

    - name: Clean legacy files
      run: |
        if [ "${{ matrix.runtime }}" = "win-x64" ]; then
          Remove-Item -Force -ErrorAction SilentlyContinue *.Designer.vb, AssemblyInfo.vb
        else
          find . -name "*.Designer.vb" -delete -o -name "AssemblyInfo.vb" -delete
        fi

    - name: Restore dependencies for VB project
      run: dotnet restore "emailer.vbproj"

    - name: Build
      run: dotnet build "emailer.vbproj" --configuration ${{ matrix.configuration }} --no-restore

    - name: Publish
      run: dotnet publish "emailer.vbproj" --configuration ${{ matrix.configuration }} --runtime ${{ matrix.runtime }} --output publish/${{ matrix.runtime }} --self-contained true

    - name: List published files
      run: |
        if [ "${{ matrix.runtime }}" = "win-x64" ]; then
          dir publish\${{ matrix.runtime }}
        else
          ls -la publish/${{ matrix.runtime }}/
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: emailer-${{ matrix.runtime }}
        path: publish/${{ matrix.runtime }}/
        retention-days: 7

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Display structure of downloaded files
      run: ls -R artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/emailer-win-x64/**
          artifacts/emailer-linux-x64/**
          artifacts/emailer-osx-x64/**
        draft: false
        prereview: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}